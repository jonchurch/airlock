/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Agent details.
 * @export
 * @interface Register201ResponseDataAgent
 */
export interface Register201ResponseDataAgent {
    /**
     * Account ID that is tied to this agent. Only included on your own agent.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    accountId?: any | null;
    /**
     * Symbol of the agent.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    symbol: any | null;
    /**
     * The headquarters of the agent.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    headquarters: any | null;
    /**
     * The number of credits the agent has available. Credits can be negative if funds have been overdrawn.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    credits: any | null;
    /**
     * The faction the agent started with.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    startingFaction: any | null;
    /**
     * How many ships are owned by the agent.
     * @type {any}
     * @memberof Register201ResponseDataAgent
     */
    shipCount: any | null;
}

/**
 * Check if a given object implements the Register201ResponseDataAgent interface.
 */
export function instanceOfRegister201ResponseDataAgent(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "symbol" in value;
    isInstance = isInstance && "headquarters" in value;
    isInstance = isInstance && "credits" in value;
    isInstance = isInstance && "startingFaction" in value;
    isInstance = isInstance && "shipCount" in value;

    return isInstance;
}

export function Register201ResponseDataAgentFromJSON(json: any): Register201ResponseDataAgent {
    return Register201ResponseDataAgentFromJSONTyped(json, false);
}

export function Register201ResponseDataAgentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Register201ResponseDataAgent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'symbol': json['symbol'],
        'headquarters': json['headquarters'],
        'credits': json['credits'],
        'startingFaction': json['startingFaction'],
        'shipCount': json['shipCount'],
    };
}

export function Register201ResponseDataAgentToJSON(value?: Register201ResponseDataAgent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': value.accountId,
        'symbol': value.symbol,
        'headquarters': value.headquarters,
        'credits': value.credits,
        'startingFaction': value.startingFaction,
        'shipCount': value.shipCount,
    };
}


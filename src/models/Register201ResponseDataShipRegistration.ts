/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The public registration information of the ship
 * @export
 * @interface Register201ResponseDataShipRegistration
 */
export interface Register201ResponseDataShipRegistration {
    /**
     * The agent's registered name of the ship
     * @type {any}
     * @memberof Register201ResponseDataShipRegistration
     */
    name: any | null;
    /**
     * The symbol of the faction the ship is registered with
     * @type {any}
     * @memberof Register201ResponseDataShipRegistration
     */
    factionSymbol: any | null;
    /**
     * The registered role of the ship
     * @type {any}
     * @memberof Register201ResponseDataShipRegistration
     */
    role: Register201ResponseDataShipRegistrationRoleEnum;
}


/**
 * @export
 */
export const Register201ResponseDataShipRegistrationRoleEnum = {
    Fabricator: 'FABRICATOR',
    Harvester: 'HARVESTER',
    Hauler: 'HAULER',
    Interceptor: 'INTERCEPTOR',
    Excavator: 'EXCAVATOR',
    Transport: 'TRANSPORT',
    Repair: 'REPAIR',
    Surveyor: 'SURVEYOR',
    Command: 'COMMAND',
    Carrier: 'CARRIER',
    Patrol: 'PATROL',
    Satellite: 'SATELLITE',
    Explorer: 'EXPLORER',
    Refinery: 'REFINERY'
} as const;
export type Register201ResponseDataShipRegistrationRoleEnum = typeof Register201ResponseDataShipRegistrationRoleEnum[keyof typeof Register201ResponseDataShipRegistrationRoleEnum];


/**
 * Check if a given object implements the Register201ResponseDataShipRegistration interface.
 */
export function instanceOfRegister201ResponseDataShipRegistration(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "factionSymbol" in value;
    isInstance = isInstance && "role" in value;

    return isInstance;
}

export function Register201ResponseDataShipRegistrationFromJSON(json: any): Register201ResponseDataShipRegistration {
    return Register201ResponseDataShipRegistrationFromJSONTyped(json, false);
}

export function Register201ResponseDataShipRegistrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Register201ResponseDataShipRegistration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'factionSymbol': json['factionSymbol'],
        'role': json['role'],
    };
}

export function Register201ResponseDataShipRegistrationToJSON(value?: Register201ResponseDataShipRegistration | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'factionSymbol': value.factionSymbol,
        'role': value.role,
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetStatus200ResponseLeaderboards } from './GetStatus200ResponseLeaderboards';
import {
    GetStatus200ResponseLeaderboardsFromJSON,
    GetStatus200ResponseLeaderboardsFromJSONTyped,
    GetStatus200ResponseLeaderboardsToJSON,
} from './GetStatus200ResponseLeaderboards';
import type { GetStatus200ResponseServerResets } from './GetStatus200ResponseServerResets';
import {
    GetStatus200ResponseServerResetsFromJSON,
    GetStatus200ResponseServerResetsFromJSONTyped,
    GetStatus200ResponseServerResetsToJSON,
} from './GetStatus200ResponseServerResets';
import type { GetStatus200ResponseStats } from './GetStatus200ResponseStats';
import {
    GetStatus200ResponseStatsFromJSON,
    GetStatus200ResponseStatsFromJSONTyped,
    GetStatus200ResponseStatsToJSON,
} from './GetStatus200ResponseStats';

/**
 * 
 * @export
 * @interface GetStatus200Response
 */
export interface GetStatus200Response {
    /**
     * The current status of the game server.
     * @type {any}
     * @memberof GetStatus200Response
     */
    status: any | null;
    /**
     * The current version of the API.
     * @type {any}
     * @memberof GetStatus200Response
     */
    version: any | null;
    /**
     * The date when the game server was last reset.
     * @type {any}
     * @memberof GetStatus200Response
     */
    resetDate: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetStatus200Response
     */
    description: any | null;
    /**
     * 
     * @type {GetStatus200ResponseStats}
     * @memberof GetStatus200Response
     */
    stats: GetStatus200ResponseStats;
    /**
     * 
     * @type {GetStatus200ResponseLeaderboards}
     * @memberof GetStatus200Response
     */
    leaderboards: GetStatus200ResponseLeaderboards;
    /**
     * 
     * @type {GetStatus200ResponseServerResets}
     * @memberof GetStatus200Response
     */
    serverResets: GetStatus200ResponseServerResets;
    /**
     * 
     * @type {any}
     * @memberof GetStatus200Response
     */
    announcements: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetStatus200Response
     */
    links: any | null;
}

/**
 * Check if a given object implements the GetStatus200Response interface.
 */
export function instanceOfGetStatus200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "resetDate" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "stats" in value;
    isInstance = isInstance && "leaderboards" in value;
    isInstance = isInstance && "serverResets" in value;
    isInstance = isInstance && "announcements" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function GetStatus200ResponseFromJSON(json: any): GetStatus200Response {
    return GetStatus200ResponseFromJSONTyped(json, false);
}

export function GetStatus200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStatus200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'version': json['version'],
        'resetDate': json['resetDate'],
        'description': json['description'],
        'stats': GetStatus200ResponseStatsFromJSON(json['stats']),
        'leaderboards': GetStatus200ResponseLeaderboardsFromJSON(json['leaderboards']),
        'serverResets': GetStatus200ResponseServerResetsFromJSON(json['serverResets']),
        'announcements': json['announcements'],
        'links': json['links'],
    };
}

export function GetStatus200ResponseToJSON(value?: GetStatus200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'version': value.version,
        'resetDate': value.resetDate,
        'description': value.description,
        'stats': GetStatus200ResponseStatsToJSON(value.stats),
        'leaderboards': GetStatus200ResponseLeaderboardsToJSON(value.leaderboards),
        'serverResets': GetStatus200ResponseServerResetsToJSON(value.serverResets),
        'announcements': value.announcements,
        'links': value.links,
    };
}


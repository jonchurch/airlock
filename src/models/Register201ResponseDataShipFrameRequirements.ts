/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The requirements for installation on a ship
 * @export
 * @interface Register201ResponseDataShipFrameRequirements
 */
export interface Register201ResponseDataShipFrameRequirements {
    /**
     * The amount of power required from the reactor.
     * @type {any}
     * @memberof Register201ResponseDataShipFrameRequirements
     */
    power?: any | null;
    /**
     * The number of crew required for operation.
     * @type {any}
     * @memberof Register201ResponseDataShipFrameRequirements
     */
    crew?: any | null;
    /**
     * The number of module slots required for installation.
     * @type {any}
     * @memberof Register201ResponseDataShipFrameRequirements
     */
    slots?: any | null;
}

/**
 * Check if a given object implements the Register201ResponseDataShipFrameRequirements interface.
 */
export function instanceOfRegister201ResponseDataShipFrameRequirements(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function Register201ResponseDataShipFrameRequirementsFromJSON(json: any): Register201ResponseDataShipFrameRequirements {
    return Register201ResponseDataShipFrameRequirementsFromJSONTyped(json, false);
}

export function Register201ResponseDataShipFrameRequirementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Register201ResponseDataShipFrameRequirements {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'power': !exists(json, 'power') ? undefined : json['power'],
        'crew': !exists(json, 'crew') ? undefined : json['crew'],
        'slots': !exists(json, 'slots') ? undefined : json['slots'],
    };
}

export function Register201ResponseDataShipFrameRequirementsToJSON(value?: Register201ResponseDataShipFrameRequirements | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'power': value.power,
        'crew': value.crew,
        'slots': value.slots,
    };
}


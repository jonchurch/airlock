/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstallMount201ResponseDataTransaction } from './InstallMount201ResponseDataTransaction';
import {
    InstallMount201ResponseDataTransactionFromJSON,
    InstallMount201ResponseDataTransactionFromJSONTyped,
    InstallMount201ResponseDataTransactionToJSON,
} from './InstallMount201ResponseDataTransaction';
import type { Register201ResponseDataAgent } from './Register201ResponseDataAgent';
import {
    Register201ResponseDataAgentFromJSON,
    Register201ResponseDataAgentFromJSONTyped,
    Register201ResponseDataAgentToJSON,
} from './Register201ResponseDataAgent';
import type { Register201ResponseDataShipCargo } from './Register201ResponseDataShipCargo';
import {
    Register201ResponseDataShipCargoFromJSON,
    Register201ResponseDataShipCargoFromJSONTyped,
    Register201ResponseDataShipCargoToJSON,
} from './Register201ResponseDataShipCargo';

/**
 * 
 * @export
 * @interface InstallMount201ResponseData
 */
export interface InstallMount201ResponseData {
    /**
     * 
     * @type {Register201ResponseDataAgent}
     * @memberof InstallMount201ResponseData
     */
    agent: Register201ResponseDataAgent;
    /**
     * List of installed mounts after the installation of the new mount.
     * @type {any}
     * @memberof InstallMount201ResponseData
     */
    mounts: any | null;
    /**
     * 
     * @type {Register201ResponseDataShipCargo}
     * @memberof InstallMount201ResponseData
     */
    cargo: Register201ResponseDataShipCargo;
    /**
     * 
     * @type {InstallMount201ResponseDataTransaction}
     * @memberof InstallMount201ResponseData
     */
    transaction: InstallMount201ResponseDataTransaction;
}

/**
 * Check if a given object implements the InstallMount201ResponseData interface.
 */
export function instanceOfInstallMount201ResponseData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "agent" in value;
    isInstance = isInstance && "mounts" in value;
    isInstance = isInstance && "cargo" in value;
    isInstance = isInstance && "transaction" in value;

    return isInstance;
}

export function InstallMount201ResponseDataFromJSON(json: any): InstallMount201ResponseData {
    return InstallMount201ResponseDataFromJSONTyped(json, false);
}

export function InstallMount201ResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstallMount201ResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agent': Register201ResponseDataAgentFromJSON(json['agent']),
        'mounts': json['mounts'],
        'cargo': Register201ResponseDataShipCargoFromJSON(json['cargo']),
        'transaction': InstallMount201ResponseDataTransactionFromJSON(json['transaction']),
    };
}

export function InstallMount201ResponseDataToJSON(value?: InstallMount201ResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agent': Register201ResponseDataAgentToJSON(value.agent),
        'mounts': value.mounts,
        'cargo': Register201ResponseDataShipCargoToJSON(value.cargo),
        'transaction': InstallMount201ResponseDataTransactionToJSON(value.transaction),
    };
}


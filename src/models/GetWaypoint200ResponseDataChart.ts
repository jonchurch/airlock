/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The chart of a system or waypoint, which makes the location visible to other agents.
 * @export
 * @interface GetWaypoint200ResponseDataChart
 */
export interface GetWaypoint200ResponseDataChart {
    /**
     * The symbol of the waypoint.
     * @type {any}
     * @memberof GetWaypoint200ResponseDataChart
     */
    waypointSymbol?: any | null;
    /**
     * The agent that submitted the chart for this waypoint.
     * @type {any}
     * @memberof GetWaypoint200ResponseDataChart
     */
    submittedBy?: any | null;
    /**
     * The time the chart for this waypoint was submitted.
     * @type {any}
     * @memberof GetWaypoint200ResponseDataChart
     */
    submittedOn?: any | null;
}

/**
 * Check if a given object implements the GetWaypoint200ResponseDataChart interface.
 */
export function instanceOfGetWaypoint200ResponseDataChart(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetWaypoint200ResponseDataChartFromJSON(json: any): GetWaypoint200ResponseDataChart {
    return GetWaypoint200ResponseDataChartFromJSONTyped(json, false);
}

export function GetWaypoint200ResponseDataChartFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetWaypoint200ResponseDataChart {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'waypointSymbol': !exists(json, 'waypointSymbol') ? undefined : json['waypointSymbol'],
        'submittedBy': !exists(json, 'submittedBy') ? undefined : json['submittedBy'],
        'submittedOn': !exists(json, 'submittedOn') ? undefined : json['submittedOn'],
    };
}

export function GetWaypoint200ResponseDataChartToJSON(value?: GetWaypoint200ResponseDataChart | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'waypointSymbol': value.waypointSymbol,
        'submittedBy': value.submittedBy,
        'submittedOn': value.submittedOn,
    };
}


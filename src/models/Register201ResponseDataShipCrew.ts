/* tslint:disable */
/* eslint-disable */
/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.3.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The ship's crew service and maintain the ship's systems and equipment.
 * @export
 * @interface Register201ResponseDataShipCrew
 */
export interface Register201ResponseDataShipCrew {
    /**
     * The current number of crew members on the ship.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    current: any | null;
    /**
     * The minimum number of crew members required to maintain the ship.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    required: any | null;
    /**
     * The maximum number of crew members the ship can support.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    capacity: any | null;
    /**
     * The rotation of crew shifts. A stricter shift improves the ship's performance. A more relaxed shift improves the crew's morale.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    rotation: Register201ResponseDataShipCrewRotationEnum;
    /**
     * A rough measure of the crew's morale. A higher morale means the crew is happier and more productive. A lower morale means the ship is more prone to accidents.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    morale: any | null;
    /**
     * The amount of credits per crew member paid per hour. Wages are paid when a ship docks at a civilized waypoint.
     * @type {any}
     * @memberof Register201ResponseDataShipCrew
     */
    wages: any | null;
}


/**
 * @export
 */
export const Register201ResponseDataShipCrewRotationEnum = {
    Strict: 'STRICT',
    Relaxed: 'RELAXED'
} as const;
export type Register201ResponseDataShipCrewRotationEnum = typeof Register201ResponseDataShipCrewRotationEnum[keyof typeof Register201ResponseDataShipCrewRotationEnum];


/**
 * Check if a given object implements the Register201ResponseDataShipCrew interface.
 */
export function instanceOfRegister201ResponseDataShipCrew(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "current" in value;
    isInstance = isInstance && "required" in value;
    isInstance = isInstance && "capacity" in value;
    isInstance = isInstance && "rotation" in value;
    isInstance = isInstance && "morale" in value;
    isInstance = isInstance && "wages" in value;

    return isInstance;
}

export function Register201ResponseDataShipCrewFromJSON(json: any): Register201ResponseDataShipCrew {
    return Register201ResponseDataShipCrewFromJSONTyped(json, false);
}

export function Register201ResponseDataShipCrewFromJSONTyped(json: any, ignoreDiscriminator: boolean): Register201ResponseDataShipCrew {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'current': json['current'],
        'required': json['required'],
        'capacity': json['capacity'],
        'rotation': json['rotation'],
        'morale': json['morale'],
        'wages': json['wages'],
    };
}

export function Register201ResponseDataShipCrewToJSON(value?: Register201ResponseDataShipCrew | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'current': value.current,
        'required': value.required,
        'capacity': value.capacity,
        'rotation': value.rotation,
        'morale': value.morale,
        'wages': value.wages,
    };
}

